---
import BaseLayout from '@/layouts/BaseLayout.astro';
import ImagenPlay from "@/img/play.png"
import ImagenShuffle from "@/img/shunffle.png"
import Boton from '@/components/Boton.astro';
import ReproductorMusica from '@/components/ReproductorMusica.astro';
import MusicLista from '@/components/MusicLista.astro';
import {MUSIC} from "@/informacion/info"
console.log(MUSIC)
export async function getStaticPaths(){
    return  MUSIC.map(info => {
        return{
            params: {name: info.name},
            props : {info}
        }
    })
    
}

const {name} = Astro.params
const {info } = Astro.props
const infoJSON = JSON.stringify(info);
---
<style>
    
    .music{
        width: 90%;
        display: flex;
        max-width: 1100px;
        margin: 80px auto;
    }
    .musicLeft{
        width: 60%;
        position: relative;
        height: 400px;
    }
    .musicLeft img{
        min-width: 300px;
        width: 100%;
        max-width: 400px;
        aspect-ratio: 1/1;
        object-fit: cover;
        position: absolute;
        left: 0;
    }
    .musicLeft img:last-child{
        box-shadow: 0 4px 6px 0 hsla(0, 0%, 0%, 0.2);
    }
    .imagen2{
        animation: animacion .8s linear;
        animation-fill-mode: both;
    }
    .musicRight{
        width: 40%;
        display: flex;
        flex-direction: column;
        justify-content: flex-end;
        gap: 30px;
    }
    .musicRight h2{
        font-size:3em;
        text-wrap: balance;
    }
    .musicRight p{
        font-size: 2em;
        font-weight: 100;
    }
    .botonRight{
        display: flex;
        gap: 15px;
    }
    @keyframes animacion {
        from{
            left: 0;
        }
        to{
            left:18%;
        }
    }
    @media (max-width: 940px){
        .music{
            flex-direction: column;
            
        }
        .musicLeft{
            width: 100%;
            overflow: hidden;
            aspect-ratio: 1/1 ;
            
        }
        .musicRight h2{
            font-size: 2em;
        }
        .musicRight p{
            font-size: 1em;
        }
    }
    @media (max-width: 446px){
        .musicLeft{
            height: auto;
        }
    }
    .lista{
        width: 90%;
        margin: 80px auto;
    }
</style>
<BaseLayout title="card">
    <section class="contenedorMusic" data-info={infoJSON}>
        <div class="music">
            <div class="musicLeft">
                <img src="https://astro-records.pages.dev/vynil-lp.webp" alt="disco" class="imagen2">
                <img src={info.picture} alt="music" >
            </div>
            <div class="musicRight">
                <h2>{info.name}</h2>
                <p>{info.author}</p>
                <div class="botonRight">
                    <Boton img={ImagenPlay.src} contenido="Play" id="play"/>
                    <Boton img={ImagenShuffle.src} contenido="Shuffle" filtro="brightness(0) saturate(100%) invert(66%) sepia(60%) saturate(435%) hue-rotate(120deg) brightness(84%) contrast(95%)" id="stop" disabled/>
                </div>
            </div>
        </div>
    </section>
    <section class="contenedorLista">
        <div class="lista">
            {info.music.map((valor, indice)=>
                <MusicLista numero={indice + 1} cancion = {valor.name} minutos = "3:42"/>
            )}
            <p>{}</p>
        </div>
    </section>
    <ReproductorMusica imagen={info.picture} nombre={info.name} author={info.author}/>
    <script>
        const prev = document.getElementById("prev")
        const playBar = document.getElementById("play")
        const play = document.getElementById("playBar")
        const next = document.getElementById("next")
        const seccion = document.querySelector(".contenedorMusic")
        const informacion = JSON.parse(seccion.dataset.info);
        let id = informacion.id
        let audio = null
        play.addEventListener("click", ()=>{
            playBar.setAttribute("disabled", "true")
            if(!audio){
                audio = new Audio(informacion.music[id].src)
            }
            if(play.classList.toggle("cambiarEstado")){
                return audio.play()
            }
            else{
                playBar.removeAttribute("disabled")
                audio.pause()
            }
        })
        next.addEventListener("click", ()=>{
            id += 1
            console.log(id)
        })
        
    </script>
</BaseLayout>